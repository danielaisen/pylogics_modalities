start: pltlf_formula

?pltlf_formula:     pltlf_equivalence
?pltlf_equivalence: pltlf_implication (EQUIVALENCE pltlf_implication)*
?pltlf_implication: pltlf_or (IMPLY pltlf_or)*
?pltlf_or:          pltlf_and (OR pltlf_and)*
?pltlf_and:         pltlf_since (AND pltlf_since)*
?pltlf_since:       pltlf_triggers (SINCE pltlf_triggers)*
?pltlf_triggers:    pltlf_unaryop (TRIGGERS pltlf_unaryop)*

?pltlf_unaryop:    pltlf_historically
             |     pltlf_once
             |     pltlf_before
             |     pltlf_weakbefore
             |     pltlf_not
             |     pltlf_wrapped

?pltlf_historically: HISTORICALLY pltlf_unaryop
?pltlf_once:         ONCE pltlf_unaryop
?pltlf_before:       BEFORE pltlf_unaryop
?pltlf_weakbefore:   WEAKBEFORE pltlf_unaryop
?pltlf_not:          NOT pltlf_unaryop
?pltlf_wrapped:      pltlf_atom
             |       LEFT_PARENTHESIS pltlf_formula RIGHT_PARENTHESIS
?pltlf_atom:       pltlf_symbol
           |       pltlf_true
           |       pltlf_false
           |       pltlf_tt
           |       pltlf_ff
           |       pltlf_start

pltlf_symbol: SYMBOL_NAME
pltlf_true: prop_true
pltlf_false: prop_false
pltlf_tt: TT
pltlf_ff: FF
pltlf_start: START

// Operators must not be part of a word
SINCE.2: /S(?=[ "\(])/
TRIGGERS.2: /T(?=[ "\(])/
HISTORICALLY.2: /H(?=[ "\(])/
ONCE.2: /O(?=[ "\(])/
BEFORE.2: /Y(?=[ "\(])/
WEAKBEFORE.2: /Z(?=[ "\(])/
FIRST.2: /first/
START.2: /start/

%ignore /\s+/

%import  .pl.SYMBOL_NAME -> SYMBOL_NAME
%import  .pl.prop_true -> prop_true
%import  .pl.prop_false -> prop_false
%import  .pl.NOT -> NOT
%import  .pl.OR -> OR
%import  .pl.AND -> AND
%import  .pl.EQUIVALENCE -> EQUIVALENCE
%import  .pl.IMPLY -> IMPLY
%import  .pl.LEFT_PARENTHESIS -> LEFT_PARENTHESIS
%import  .pl.RIGHT_PARENTHESIS -> RIGHT_PARENTHESIS
%import  .ltl.TT -> TT
%import  .ltl.FF -> FF
